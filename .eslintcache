[{"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\index.js":"1","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\components\\App.js":"2","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\hero-section\\Hero.js":"3","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\hero-section\\components\\hero-copy\\HeroCopy.js":"4","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\hero-section\\components\\hero-header\\HeroHeader.js":"5","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\contact-form\\ContactForm.js":"6","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\components\\Button.js":"7","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\contact-form\\components\\contact-form-input\\ContactInput.js":"8","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\components\\Header.js":"9"},{"size":208,"mtime":1611636525913,"results":"10","hashOfConfig":"11"},{"size":279,"mtime":1611701533973,"results":"12","hashOfConfig":"11"},{"size":702,"mtime":1611701007900,"results":"13","hashOfConfig":"11"},{"size":399,"mtime":1611644335864,"results":"14","hashOfConfig":"11"},{"size":777,"mtime":1611644335868,"results":"15","hashOfConfig":"11"},{"size":1590,"mtime":1611689904472,"results":"16","hashOfConfig":"11"},{"size":261,"mtime":1611689904465,"results":"17","hashOfConfig":"11"},{"size":1140,"mtime":1611689904475,"results":"18","hashOfConfig":"11"},{"size":703,"mtime":1611700734211,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fv52q1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\index.js",[],"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\components\\App.js",[],"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\hero-section\\Hero.js",[],"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\hero-section\\components\\hero-copy\\HeroCopy.js",[],["41","42"],"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\hero-section\\components\\hero-header\\HeroHeader.js",["43","44","45","46"],"import React from \"react\";\r\nimport \"./hero-header.css\";\r\nimport mainLogo from \"../../../../assets/logo-main.png\";\r\n\r\nconst HeroHeader = () => {\r\n  return (\r\n    <div className=\"hero-header\">\r\n      <div className=\"hero-header__links\">\r\n        <a href=\"#\" className=\"hero-header__link\">\r\n          Store\r\n        </a>\r\n        <a href=\"#\" className=\"hero-header__link\">\r\n          Tutorials\r\n        </a>\r\n      </div>\r\n      <img src={mainLogo} alt=\"Main logo\" className=\"hero-header__logo\"></img>\r\n      <div className=\"hero-header__links\">\r\n        <a href=\"#\" className=\"hero-header__link\">\r\n          Blog\r\n        </a>\r\n        <a href=\"#\" className=\"hero-header__link\">\r\n          Contact\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroHeader;\r\n","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\contact-form\\ContactForm.js",["47"],"import React from \"react\";\r\nimport ContactInput from \"./components/contact-form-input/ContactInput\";\r\nimport \"./contact-form-section.css\";\r\nimport logoMain from \"../../assets/logo-main.png\";\r\nimport Header from \"../../components/Header\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  // Callback function to lift name state up from ContactInput\r\n  updateName = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  // Callback function to lift email state up from ContactInput\r\n  updateEmail = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  // Callback function to lift message state up from ContactInput\r\n  updateMessage = (event) => {\r\n    this.setState({ message: event.target.value });\r\n  };\r\n\r\n  // Callback to print alert of the form data gathered from the contact form\r\n  confirmSubmitForm = (event) => {\r\n    alert(\r\n      `Hello, ${this.state.name} we got your message. Check at ${this.state.email} for a response.`\r\n    );\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-form-section\">\r\n        <Header color=\"orange\" />\r\n        <ContactInput\r\n          name={this.state.name}\r\n          updateName={this.updateName}\r\n          email={this.state.email}\r\n          updateEmail={this.updateEmail}\r\n          message={this.state.message}\r\n          updateMessage={this.updateMessage}\r\n          confirmSubmitForm={this.confirmSubmitForm}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","C:\\Users\\Daniel\\byrd-coding-challenge\\src\\components\\Button.js",[],"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\sections\\contact-form\\components\\contact-form-input\\ContactInput.js",[],"C:\\Users\\Daniel\\byrd-coding-challenge\\src\\components\\Header.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":9,"column":9,"nodeType":"54","endLine":9,"endColumn":51},{"ruleId":"52","severity":1,"message":"53","line":12,"column":9,"nodeType":"54","endLine":12,"endColumn":51},{"ruleId":"52","severity":1,"message":"53","line":18,"column":9,"nodeType":"54","endLine":18,"endColumn":51},{"ruleId":"52","severity":1,"message":"53","line":21,"column":9,"nodeType":"54","endLine":21,"endColumn":51},{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'logoMain' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]